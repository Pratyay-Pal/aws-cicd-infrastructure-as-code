###This is the Workflow file. This is triggered automatically on Master merge.

#Author: Pratyay Pal [https://github.com/Pratyay-Pal]

name: Push Image to ECR
run-name: ${{ github.actor }} started workflow for ${{ github.event.repository.name }}
on:
  push:
    branches:
      - 'master'

#EDIT ONLY THE ENV VARS. LEAVE THE REST AS IT IS
env:
  #S3 Bucket which will contain the ZIP of the Infrastrucure CFN
  #Artifacts created by the CICD Pipeline will also be stored here
  S3_Bucket_Name_For_Infra_CFN: aws-cfn-infra-store
  S3_Bucket_Name_For_CICD_Artifacts: aws-cicd-artifacts-store
  #Change this in case your file has a different name
  Infrastructure_Stack_Zip_File: web-server-cfn.zip 
  #Change this in case your zip has a different name
  Infrastructure_Stack_Yaml_File: web-server-cfn.yaml 
  Infrastructure_Stack_Name: web-server-stack
  CICD_Pipeline_Stack_Name: pipeline-cfn.yaml

jobs:
  Explore-GitHub-Actions:
    name: Github Actions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses : actions/checkout@v3
        with:
          repository: '${{ github.actor }}/${{ github.event.repository.name }}'

      - name: AWS Configure
        uses: aws-actions/configure-aws-credentials@v1
        with:          
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: cicd-pipeline-stack
          template: ${{ env.CICD_Pipeline_Stack_Name }}
          capabilities: CAPABILITY_NAMED_IAM
          no-fail-on-empty-changeset: "1"
          parameter-overrides: >-
            ArtifactStoreBucket=${{ env.S3_Bucket_Name_For_CICD_Artifacts }},
            SourceArtifactBucket=${{ env.S3_Bucket_Name_For_Infra_CFN }},
            SourceArtifact=${{ env.Infrastructure_Stack_Zip_File }},
            SourceArtifactCode=${{ env.Infrastructure_Stack_Yaml_File }},
            InfrastructureDeploymentStackName=${{ env.Infrastructure_Stack_Name }}

      - name: Push Infrastructure CFN to S3
        run: |
          zip $Infrastructure_Stack_Zip_File $Infrastructure_Stack_Yaml_File
          aws s3api put-object --bucket $S3_Bucket_Name_For_Infra_CFN --key $Infrastructure_Stack_Zip_File --body $Infrastructure_Stack_Zip_File