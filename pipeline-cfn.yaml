#Change values in Parameter section only. Leave the rest as it is.
Parameters:
  ArtifactStoreBucket:
    Type: String
    Default: aws-infra-as-code-cfn-store
    Description: Artifact store for Codepipeline.
  
  SourceArtifactBucket:
    Type: String
    Default: aws-infra-as-code-cfn-store
    Description: Bucket where Source Artifact for Codepipeline is stored.
  
  SourceArtifact:
    Type: String
    Default: infrastructure-cfn.zip
    Description: Source Artifact for Codepipeline. Must be ZIP.

  SourceArtifactCode:
    Type: String
    Default: infrastructure-cfn.yaml
    Description: Infrastruture as code. Must be YAML/JSON.

  CFNRoleARN:
    Type: String
    Default: AWS-CFN-AdminRole
    Description: Role that Cloudformation assumes when creating resources on AWS.
  
  InfrastructureDeploymentStackName:
    Type: String
    Default: testInfra
    Description: Name of stack which will be responsible for Infrastructure Deployment.

Resources:
  S3BucketToStoreCFN:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref SourceArtifactBucket
      VersioningConfiguration:
        Status: Enabled
    DeletionPolicy: Delete

  LambdaRole2Connect2S3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: Lambda2S3
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "s3:*"
                Resource:
                  - !Sub arn:aws:s3:::${SourceArtifactBucket}
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"

  CFNRole2CreateResources:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref CFNRoleARN
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: Admin
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "*"
                Resource:
                  - "*"

  Lambda2EmptyBucketBeforeDestroying:
    Type: "AWS::Lambda::Function"
    Properties:
      Runtime: "python3.12"
      Timeout: 60
      Role: 
        Fn::GetAtt:
          - "LambdaRole2Connect2S3"
          - "Arn"
      Handler: "index.lambda_handler"
      Code: 
        ZipFile: |
          #!/usr/bin/env python
          import json
          import boto3
          import cfnresponse

          s3 = boto3.client('s3')
          def lambda_handler(event, context):
            print("Event : "+str(event))
            bucket_name=event['ResourceProperties']['bucket_name']
            try:
              if event['RequestType'] == 'Delete':                
                allObjs = s3.list_object_versions(Bucket=bucket_name)
                for objVer in allObjs.get('Versions', []):
                    s3.delete_object(
                        Bucket=bucket_name,
                        Key=objVer['Key'],
                        VersionId=objVer['VersionId']
                    )                  
                for objDelMrkr in allObjs.get('DeleteMarkers', []):
                    s3.delete_object(
                        Bucket=bucket_name,
                        Key=objDelMrkr['Key'],
                        VersionId=objDelMrkr['VersionId']
                    )
              response_data = {}
              cfnresponse.send(event, context, cfnresponse.SUCCESS, response_data)
            except Exception as e:
              print(e)
              response_data['Data'] = str(e)
              cfnresponse.send(event, context, cfnresponse.FAILED, response_data)
                
            return {
                'statusCode': 200,
                'body': json.dumps('All objects deleted')
            }
  
  LambdaCustomResource:
    Type: Custom::LambdaCustomResource
    Properties:
      ServiceToken: !GetAtt Lambda2EmptyBucketBeforeDestroying.Arn
      bucket_name: !Ref S3BucketToStoreCFN ###THIS IS NEEDED TO CREATE DEPENDENCY BETWEEN DELETION LAMBDA(Lambda2EmptyBucketBeforeDestroying) AND S3 BUCKET
      ### IF THIS IS NOT PRESENT CFN WILL TRY TO DESTROY THE S3 BEFORE IT IS EMPTIED

  InfrastructureDeployment:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref S3BucketToStoreCFN
        Type: S3
      Name: infrastructure-deployment
      PipelineType: V2
      RoleArn: !GetAtt CFNRole2CreateResources
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: 1
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref S3BucketToStoreCFN
                S3ObjectKey: !Ref SourceArtifact
              OutputArtifacts: 
                - Name: SourceArtifact
        - Name: Deploy
          Actions:
            - Name: Create-Change-Set
              RunOrder: 2
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: pipeline-changeset
                RoleArn: !Ref CFNRole2CreateResources
                StackName: !Ref InfrastructureDeploymentStackName
                TemplatePath: !Join [ "::", [ SourceArtifact, !Ref SourceArtifactCode ] ]
              InputArtifacts:
                - Name: SourceArtifact
            - Name: Execute-Change-Set
              RunOrder: 3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: pipeline-changeset
                StackName: !Ref InfrastructureDeploymentStackName
              InputArtifacts:
                - Name: SourceArtifact
